I"<<p> My brother gifted me a Raspberry Pi 3 a couple of months back. After tinkering around with it for a few days, I kept it aside because I couldn't think of any use case for it that would benefit me everyday. This was until I learned about NAS and its technologies in one of my courses at college.</p>
<p> I found it really cool that you can have a Network Attached Storage to access the same files through any deivce on the network. This would allow me to finally have a centralized storage to host a media center and also store some static files and documents. Ever since then, I have been playing with the idea of building a NAS using my pi. I managed to set it up in less than a day. And it's been a huge help at home. </p>
<p> I could have setup the NAS by using OpenMediaVault ( a NAS solution based on Debian Linux) which would set up the NAS for me without me having to do all the heavy lifting like installations and congifuration. But, I wanted to use this time to do all the steps myself and learn a lot along the way. So, I took out my black hoodie and did what every professional programmer does. I googled for answers to all my questions. And in a couple of hours, I was done with setting up my very own NAS using the Raspberry Pi.</p>

<!-- Section one -->
<h2><b> Hardware That I Used: </b></h2>
<ul>
    <li> Raspberry Pi 3 model B.</li>
    <li> Ethernet Cord. </li>
    <li> One 500 GB Segate External Hard disk.</li>
    <li> 16GB class 4 microSD card, loaded with Raspbian Buster Lite. </li>
    <li> Power Source. </li>
</ul>
<p> If I had another spare external hard disk lying around, I would've tried to implement RAID in my NAS, making sure that I always have a backup of all my files. I implemented my NAS with just one hard disk. 
<br /> I setup the raspberry pi and the NAS headlessly with the raspberry pi and so used just the lite version of raspbian. </p>

<!--Section Two -->
<h2><b> Setting up the NAS </b></h2>
<p> 
    I started with downloading and burning the raspbian buster lite OS to the microSD card. Since SSH is not enabled by default, I just created a file named "ssh" with no extension and copied it to the boot folder in the microSD. For those of you who do not know what ssh is- Secure SHell is a software package that enables a secure connection between the client and the server. This means that I am able to control the Pi using my windows machine over my network. <br /> I connected the hard disk, ethernet cable and the power supply to the Pi to turn it on. To connect to the Pi via ssh, I found the IP address that my router had assigned to the Pi and connected to it using the command in the command prompt:
</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```

ssh pi@ip_address

```
</code></pre></div></div>
<p>
    After signing into the Pi using the default password of 
</p>
:ET